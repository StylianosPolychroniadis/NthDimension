// Fragment Shader Base Snippet

#variables
precision lowp float;

uniform vec3 in_lightambient;

in vec4 g_pos;					// ModelView space vertex position
in vec4 g_normal;				// ModelView space vertex normal
in vec3 v_eyedirection;
in vec3 v_normal;
in vec2 v_texture;
in vec3 v_tangent;
in vec3 v_bnormal;

in float v_depth;

uniform sampler2D baseTexture;
uniform sampler2D baseTextureTwo;
uniform sampler2D baseTextureThree;
uniform sampler2D baseTextureFour;
uniform sampler2D auxTexture;
uniform sampler2D auxTextureTwo;
uniform sampler2D auxTextureThree;
uniform sampler2D auxTextureFour;
uniform sampler2D normalTexture;
uniform sampler2D emitTexture;
uniform sampler2D definfoTexture;

uniform sampler2D backColorTexture;

out vec4 out_frag_color;

uniform sampler2D noiseTexture;

uniform bool use_emit;
uniform bool emit_a_base;
uniform bool emit_a_normal;
uniform vec3 in_emitcolor;

uniform bool use_alpha;
uniform vec2 in_rendersize;

uniform float ref_size;
uniform float blur_size;
uniform float fresnel_str;
#functions
vec2 screenpos(){
	return gl_FragCoord.xy/in_rendersize;
}
#code
	vec2 rnd = texture(noiseTexture,gl_FragCoord.xy/128.0).xy * 2.0 -1.0;
	
	float depth = gl_FragCoord.z;
	vec2 screenposition = screenpos();
	//vec3 refn = reflect(v_eyedirection,N);
	vec4 base = texture(baseTexture, v_texture);
	vec4 base2 = texture(baseTextureTwo, v_texture);
	vec4 base3 = texture(baseTextureThree, v_texture);
	vec4 base4 = texture(baseTextureFour, v_texture);
	vec4 info = texture(definfoTexture,v_texture);